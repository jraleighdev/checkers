let e;var t;let n;var i;(t=e||(e={}))[t.unkown=0]="unkown",t[t.light=1]="light",t[t.dark=2]="dark",t[t.lightKing=3]="lightKing",t[t.darkKing=4]="darkKing",(i=n||(n={}))[i.dark=1]="dark",i[i.light=2]="light";const l=document.getElementById("canvas"),a=l.getContext("2d"),c=[[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0]];let d,h=e.light;const x=(e,t,n)=>{a.beginPath();const i=0===t?37.5:75*t+37.5,l=0===e?37.5:75*e+37.5;a.arc(i,l,27.5,0,2*Math.PI),a.fillStyle=n,a.fill()},o=(()=>{const t=[];for(let i=0;i<=c.length-1;i++){const l=c[i],d=[];for(let t=0;t<=l.length-1;t++){const c=l[t],h={type:c,xLocation:75*i,yLocation:75*t,hasPiece:!1,path:new Path2D,xIndex:t,yIndex:i,pieceType:e.unkown};h.path.rect(75*t,75*i,75,75),a.fillStyle=c===n.dark?"brown":"tan",a.fill(h.path),d.push(h),c===n.dark&&(i<=2&&(h.hasPiece=!0,h.pieceType=e.dark,x(i,t,"black")),i>=5&&(h.hasPiece=!0,h.pieceType=e.light,x(i,t,"white")))}t.push(d)}return t})(),r=(t,i,l)=>{for(let d=0;d<=o.length-1;d++){const h=o[d];for(let o=0;o<=h.length-1;o++){const r=c[d][o],s=h[o];a.fillStyle=r===n.dark?"brown":"tan",d==i&&o==t&&l&&(a.fillStyle=l),s.path.rect(75*o,75*d,75,75),a.fill(s.path),s.hasPiece&&x(d,o,s.pieceType==e.light?"white":"black")}}},s=()=>{h=h==e.dark?e.light:e.dark},p=(t,n,i)=>{const l=i.xIndex+1,a=i.xIndex-1,c=i.xIndex+2,d=i.xIndex-2,h=t==e.dark?i.yIndex+1:i.yIndex-1;if(t==e.dark?n.yIndex>i.yIndex:n.yIndex<i.yIndex)if(n.xIndex==l||n.xIndex==a)n.hasPiece=!0,n.pieceType=i.pieceType,i.hasPiece=!1,i=n,r(n.xIndex,n.yIndex),s();else if(n.xIndex==c||n.xIndex==d){const e=n.xIndex==c?l:a,d=o[h][e];d.hasPiece&&d.pieceType!=t&&(n.hasPiece=!0,n.pieceType=i.pieceType,d.hasPiece=!1,i.hasPiece=!1,i=n,r(n.xIndex,n.yIndex)),s()}};l.addEventListener("mousemove",(e=>{if(d)return;let t;for(let n=0;n<=o.length-1;n++){const i=o[n];for(let n=0;n<=i.length-1;n++)t=i[n],a.isPointInPath(t.path,e.offsetX,e.offsetY)&&t.hasPiece&&r(t.xIndex,t.yIndex,"green")}})),l.addEventListener("click",(e=>{let t;for(let n=0;n<=o.length-1;n++){const i=o[n];for(let n=0;n<=i.length-1;n++)t=i[n],a.isPointInPath(t.path,e.offsetX,e.offsetY)&&(d&&d.pieceType==h?t.hasPiece?(d=t,r(t.xIndex,t.yIndex,d.pieceType==h?"green":"red")):p(d.pieceType,t,d):t.hasPiece&&(console.log(t),d=t,r(t.xIndex,t.yIndex,d.pieceType==h?"green":"red")))}}));